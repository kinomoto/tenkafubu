// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;

using SharpUnit;
using Tenkafubu.Sqlite;

namespace Tenkafubu.Migrate
{
	public class DBMigrateTest : TestCase
	{
		public DBMigrateTest ()
		{
		}

		[UnitTest]
		public void TestMigrateSQL(){
			var db = new DB("Temp/TestMigrateSQL.db");
			db.DeleteDBFile();
			var migrate = new DBMigrate(db);
			
			migrate.Migrate("Role",
			                "CREATE TABLE Role( id INTEGER);",
			                "ALTER TABLE Role ADD COLUMN name TEXT;");
			var result = db.Database.ExecuteNonQuery("Insert into role values (1,'fff')");
			Assert.Equal(1,result);
			
			migrate.Migrate("Role",
			                "CREATE TABLE Role( id INTEGER);",
			                "ALTER TABLE Role ADD COLUMN name TEXT;",
			                "ALTER TABLE Role ADD COLUMN admin INTEGER;");
			
			var result2 = db.Database.ExecuteNonQuery("Insert into role values (2,'aaaa',1)");
			Assert.Equal(1,result2);
		}


		[UnitTest]
		public void TestChangeMigrateSQL(){
			var db = new DB("Temp/TestChangeMigrateSQL.db");
			db.DeleteDBFile();
			var migrate = new DBMigrate(db);

			migrate.Migrate("User",
			                "CREATE TABLE USER( id INTEGER);",
			                "ALTER TABLE USER ADD COLUMN name TEXT;");


			migrate.hashMismatchAction = HashMismatchAction.ThrowException;

			try{
				migrate.Migrate("User",
				                "CREATE TABLE USER( id INTEGER);",
				                "ALTER TABLE USER ADD COLUMN nickname TEXT;"); // SQL is changed
				Assert.False (true,"Never invoke hear");
			}catch(Exception e){
				Assert.True(true,"Exception is thrown");
			}

			migrate.hashMismatchAction = HashMismatchAction.Ignore;
			
			migrate.Migrate("User",
			                "CREATE TABLE USER( id INTEGER);",
			                "ALTER TABLE USER ADD COLUMN hoge TEXT;"); // SQL is changed
			Assert.True(true,"Nothin done");

			migrate.hashMismatchAction = HashMismatchAction.RecreateTable;
			
			migrate.Migrate("User",
			                "CREATE TABLE USER( id INTEGER,nickname TEXT,age INTEGER);");
			Assert.Equal(1, db.Database.ExecuteNonQuery("Insert into User (id,nickname,age) values (1,'hoge',21);"));
			                
			                
		}

	}
}

